name: pytest-coverage-commentator
on:
  pull_request:
    branches: 
      - '*'
jobs:
  pytest_coverage_tool:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [ '3.6', '3.7', '3.8', '3.9']
    steps:
    - name: git
      run: sudo apt-get install git
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --user -e .
        if [ -f requirements.txt ]; then pip install --user -r requirements.txt; fi
    - name: Delete .git because the test needs it to be raw
      run: rm -rf .git
    - name: Set git global settings
      run: |
        git config --global user.email "test@rod.codes"
        git config --global user.name "Testy McTesty"
    - name: Build coverage file
      run: PATH="$PATH:/home/runner/.local/bin" pytest -vvv --cache-clear --cov=src/gitsweep/ --cov-config=.coveragerc src/gitsweep/tests
    - name: Build coverage file with coverage file export
      run: PATH="$PATH:/home/runner/.local/bin" pytest -vvv --cache-clear --cov=src/gitsweep/ --cov-config=.coveragerc src/gitsweep/tests > pytest-coverage.txt
    - name: Comment coverage
      uses: coroo/pytest-coverage-commentator@v1.0.2
  build_or_upload_if_tag_to_pypi:
    needs: [pytest_coverage_tool]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9']
    steps:
    - name: git
      run: sudo apt-get install git
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --user .
        pip install twine wheel
    - uses: casperdcl/deploy-pypi@v2
      with:
        build: true
        pip: true
        password: ${{ secrets.SECRET_PYPI_RODCODES_API_TOKEN }}
        upload: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') }}
